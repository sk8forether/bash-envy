#!/bin/bash

## Set up suffix for adjoint run: "_ad"
#  or leave as "" for forward run
suff="_ad"

## Set up directories
root_dir=$HOME/MITgcm_c65x+
exp_dir=$PWD
build_dir=$exp_dir/build$suff
code_dir=$exp_dir/code$suff

## Opt file architecture specific
pleiades_gen=$contrib/bash-scripts/linux_amd64_ifort+mpi_ice_nas_all
pleiades_ivy=$contrib/bash-scripts/linux_amd64_ifort+mpi_ice_nas_ivy
pleiades_haswell=$contrib/bash-scripts/linux_amd64_ifort+mpi_ice_nas_haswell
engaging_opt=$root_dir/tools/build_options/linux_amd64_gfortran
stampede_opt=$contrib/bash-scripts/linux_amd64_ifort+mpi_stampede
lonestar_opt=$contrib/bash-scripts/linux_amd64_ifort+mpi_lonestar
lonestar_profile_opt=$contrib/bash-scripts/linux_amd64_ifort+mpi_lonestar+profile
sverdrup_opt=$contrib/bash-scripts/linux_amd64_ifort+mpi_sverdrup

## Use the correct opt file here
build_cmd="$root_dir/tools/genmake2 -rd=$root_dir -mods=$code_dir -optfile=$lonestar_opt -mpi"
#tmp="make_junk"$suff".txt"

## Check which run to set up
if [[ $suff == "_ad" ]]
  then
        echo "Preparing adjoint run ..."
elif [[ $suff == "" ]]
  then
        echo "Preparing forward run ..."
else
        echo "Unsure of suffix, exiting ..."
        exit 1
fi

## Build the model in build directory
if [ ! -d $build_dir ]
  then
        mkdir $build_dir
        cd $build_dir
else
        cd $build_dir
        if [ -s Makefile ] ; then
		make clean
	fi
fi

cd $build_dir
echo "Inside dir: "$PWD

echo "Evaluating: "$build_cmd
eval $build_cmd 
echo "Make depend ..."
eval "make depend" 
echo "Making executable ..."
if [[ $suff == "_ad" ]] ; then
  eval "make -j 4 adall" 
else
  eval "make -j 4"
fi
