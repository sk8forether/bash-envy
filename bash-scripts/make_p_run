#!/bin/bash

# Purpose is to make an executable with Lonestar's mpiP profiling package
# This amounts to simply adding some compiler flags and hitting go.

## Set up suffix for adjoint run
suff=""
dir_suff=".12mo"

## Set up directories
root_dir=$HOME/MITgcm
ver_dir=$WORK/verification/global_oce_llc90
exp_dir=$PWD
build_dir=$exp_dir/build$suff
code_dir=$exp_dir/code$suff
run_dir=$exp_dir/run$suff$dir_suff

# Profiling library links
module load mpiP
mpip_links='-L${TACC_MPIP_LIB} -lmpiP'

build_cmd="$root_dir/tools/genmake2 -rd=$root_dir -mods=$code_dir -optfile=$root_dir/tools/build_options/linux_amd64_ifort -mpi"
#tmp="make_junk"$suff".txt"

## Check which run to set up
if [[ $suff == "_ad" ]]
  then
        echo "Preparing adjoint run ..."
elif [[ $suff == "" ]]
  then
        echo "Preparing forward run ..."
else
        echo "Unsure of suffix, exiting ..."
        exit 1
fi

## Build the model in build directory
if [ ! -d $build_dir ]
  then
        mkdir $build_dir
        cd $build_dir
else
        cd $build_dir
        if [ -s Makefile ] ; then
		make clean
	fi
fi

cd $build_dir
echo "Inside dir: "$PWD

echo "Evaluating: "$build_cmd
eval $build_cmd 

libs1=$(grep "LIBS = " Makefile | cut -f2- -d'=')

echo "Make depend ..."
eval "make depend" 
echo "Making executable ..."
if [[ $suff == "_ad" ]] ; then
  eval "make adall LIBS='$libs1 $mpip_links'"
else
  eval "make LIBS='$libs1 $mpip_links'"
fi
